#!/bin/bash

# Brendan Williams - April 2020
# This script will run recon-all and thalamic nuclei segmentation in freesurfer

letsSurf () {
SUBJECTS_DIR=/storage/gold/cinn/2019/SRfMRI/Freesurfer
echo $1 recon all beginning
recon-all -subject $1 -i /storage/gold/cinn/2019/SRfMRI/BIDS/$1/anat/$1_rec-NORM_T1w.nii.gz -all -cm
echo $1 recon all finished
echo $1 thalamic segmentation beginnning
segmentThalamicNuclei.sh $1
echo $1 thalamic segmentation finished	
}

# Brendan Williams - April 2020
# This script will extract anatomical space masks from freesurfer segmentation, convert the files to nitfi (NOTE, the dimensions for mgz to nii converted images (vs feat dir examples) needs to be checked and adjusted if needed), apply an affine transformation to move the masks into functional space, and binarise the masks. 
#to get ID codes for other regions, see /usr/local/freesurfer/FreeSurferColorLUT.txt

makemask () {
PROJECT_DIR=/storage/gold/cinn/2019/SRfMRI
FS_DIR=$PROJECT_DIR/Freesurfer
FEAT_DIR=$PROJECT_DIR/preprocessed
MASK_DIR=$PROJECT_DIR/masks
BIN_THR=0.5 #Threshold for fslmaths binarisation

for i in "$1"

do 

echo Creating ${i} masks

mkdir -p $MASK_DIR/${i}/{anat,anat-nii,func,func_binarised}

# Convert segmentations back to native dimensions
mri_label2vol --seg $FS_DIR/${i}/mri/ThalamicNuclei.v10.T1.FSvoxelSpace.mgz --temp $FS_DIR/${i}/mri/rawavg.mgz --regheader $FS_DIR/${i}/mri/ThalamicNuclei.v10.T1.FSvoxelSpace.mgz --o $FS_DIR/${i}/mri/ThalamicNuclei.v10.T1-anat.mgz

mri_label2vol --seg $FS_DIR/${i}/mri/aparc+aseg.mgz --temp $FS_DIR/${i}/mri/rawavg.mgz --regheader $FS_DIR/${i}/mri/aparc+aseg.mgz --o $FS_DIR/${i}/mri/aparc+aseg-anat.mgz

# Extract masks from freesurfer segmentation
mri_binarize --i $FS_DIR/${i}/mri/ThalamicNuclei.v10.T1-anat.mgz --o $MASK_DIR/${i}/anat/Left-CM.mgz --match 8106
mri_binarize --i $FS_DIR/${i}/mri/ThalamicNuclei.v10.T1-anat.mgz --o $MASK_DIR/${i}/anat/Left-Pf.mgz --match 8118
mri_binarize --i $FS_DIR/${i}/mri/ThalamicNuclei.v10.T1-anat.mgz --o $MASK_DIR/${i}/anat/Right-CM.mgz --match 8206
mri_binarize --i $FS_DIR/${i}/mri/ThalamicNuclei.v10.T1-anat.mgz --o $MASK_DIR/${i}/anat/Right-Pf.mgz --match 8218
mri_binarize --i $FS_DIR/${i}/mri/ThalamicNuclei.v10.T1-anat.mgz --o $MASK_DIR/${i}/anat/Left-MDl.mgz --match 8112
mri_binarize --i $FS_DIR/${i}/mri/ThalamicNuclei.v10.T1-anat.mgz --o $MASK_DIR/${i}/anat/Left-MDm.mgz --match 8113
mri_binarize --i $FS_DIR/${i}/mri/ThalamicNuclei.v10.T1-anat.mgz --o $MASK_DIR/${i}/anat/Right-MDl.mgz --match 8212
mri_binarize --i $FS_DIR/${i}/mri/ThalamicNuclei.v10.T1-anat.mgz --o $MASK_DIR/${i}/anat/Right-MDm.mgz --match 8213
mri_binarize --i $FS_DIR/${i}/mri/aparc+aseg-anat.mgz --o $MASK_DIR/${i}/anat/Right-mOFC.mgz --match 2014
mri_binarize --i $FS_DIR/${i}/mri/aparc+aseg-anat.mgz --o $MASK_DIR/${i}/anat/Right-lOFC.mgz --match 2012
mri_binarize --i $FS_DIR/${i}/mri/aparc+aseg-anat.mgz --o $MASK_DIR/${i}/anat/Left-mOFC.mgz --match 1014
mri_binarize --i $FS_DIR/${i}/mri/aparc+aseg-anat.mgz --o $MASK_DIR/${i}/anat/Left-lOFC.mgz --match 1012

# Convert masks from .mgz to nifti file type and change dimensions and orientations to match highres.nii
echo converting ${i} masks to nifti

cd $MASK_DIR/${i}/anat

for f in *

do

filename="${f%.*}"

mri_convert --in_type mgz --out_type nii $MASK_DIR/${i}/anat/${f} $MASK_DIR/${i}/anat-nii/${filename}.nii.gz 

done

# Create highres2example_func_warp and apply to anatomical space masks to convert to functional space

echo applying ${i} warp

invwarp --ref=$FEAT_DIR/${i}/FEAT_output/preprocessing.feat/reg/highres.nii.gz --warp=$FEAT_DIR/${i}/FEAT_output/preprocessing.feat/reg/example_func2highres_warp.nii.gz --out=$FEAT_DIR/${i}/FEAT_output/preprocessing.feat/reg/highres2example_func_warp.nii.gz

cd $MASK_DIR/${i}/anat-nii

for f in *

do

filename="${f%%.*}"

applywarp --ref=$FEAT_DIR/${i}/FEAT_output/preprocessing.feat/reg/example_func --in=${f} --warp=$FEAT_DIR/${i}/FEAT_output/preprocessing.feat/reg/highres2example_func_warp.nii.gz --out=$MASK_DIR/${i}/func/${filename}_func_nonbinary.nii.gz

fslmaths $MASK_DIR/${i}/func/${filename}_func_nonbinary.nii.gz -thr $BIN_THR -bin $MASK_DIR/${i}/func_binarised/${filename}_func_binary${BIN_THR}.nii.gz

done

done 
}

"$@"
